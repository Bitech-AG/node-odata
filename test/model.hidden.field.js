var PORT, entity, odata, request, should;

should = require('should');

request = require('supertest');

odata = require('../.');

PORT = 0;

entity = void 0;

describe('model.hidden.field', function() {
  before(function(done) {
    var s, server;
    server = odata('mongodb://localhost/odata-test');
    server.resource('hidden-field', {
      name: String,
      password: {
        type: String,
        select: false
      }
    });
    return s = server.listen(PORT, function() {
      PORT = s.address().port;
      return request("http://localhost:" + PORT).post('/hidden-field').send({
        name: 'zack',
        password: '123'
      }).end(function(err, res) {
        entity = res.body;
        return done();
      });
    });
  });
  it("should work when get entity", function(done) {
    return request("http://localhost:" + PORT).get("/hidden-field(" + entity.id + ")").expect(200).end(function(err, res) {
      if (err) {
        return done(err);
      }
      res.body.should.be.have.property('name');
      res.body.name.should.be.equal('zack');
      res.body.should.be.not.have.property('password');
      return done();
    });
  });
  it('should work when get entities list', function(done) {
    return request("http://localhost:" + PORT).get('/hidden-field').expect(200).end(function(err, res) {
      if (err) {
        return done(err);
      }
      res.body.value[0].should.be.have.property('id');
      res.body.value[0].should.be.have.property('name');
      res.body.value[0].should.be.not.have.property('password');
      return done();
    });
  });
  /*
  # TODO: unknown error: timeout for test.
  # it 'should work when get entities list even it is selected', (done) ->
  #   request("http://localhost:#{PORT}")
  #     .get('/hidden-field?$select=name, password')
  #     .expect(200)
  #     .end (err, res) ->
  #       res.body.value[0].should.be.not.have.property('id')
  #       res.body.value[0].should.be.have.property('name')
  #       res.body.value[0].should.be.not.have.property('password')
  #       done()
  */
  return it('should work when get entities list even only it is selected', function(done) {
    return request("http://localhost:" + PORT).get('/hidden-field?$select=password').expect(200).end(function(err, res) {
      res.body.value[0].should.be.have.property('id');
      res.body.value[0].should.be.have.property('name');
      res.body.value[0].should.be.not.have.property('password');
      return done();
    });
  });
});

// ---
// generated by coffee-script 1.9.2
