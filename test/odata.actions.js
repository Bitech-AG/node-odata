var PORT, bookSchema, books, odata, request, should, support;

should = require('should');

request = require('supertest');

odata = require('../.');

support = require('./support');

PORT = 0;

bookSchema = {
  author: String,
  description: String,
  genre: String,
  price: Number,
  publish_date: Date,
  title: String
};

books = void 0;

describe('odata.actions', function() {
  before(function(done) {
    var conn, server;
    conn = 'mongodb://localhost/odata-test';
    server = odata(conn);
    server.resource('book', bookSchema).action('/50off', function(req, res, next) {
      return server.resources.book.findById(req.params.id, function(err, book) {
        book.price = +(book.price / 2).toFixed(2);
        return book.save(function(err) {
          return res.jsonp(book);
        });
      });
    });
    return support(conn, function(data) {
      var s;
      books = data;
      return s = server.listen(PORT, function() {
        PORT = s.address().port;
        return done();
      });
    });
  });
  return it('should work', function(done) {
    return request("http://localhost:" + PORT).post("/book(" + books[0].id + ")/50off").expect(200).end(function(err, res) {
      var halfPrice;
      if (err) {
        return done(err);
      }
      halfPrice = +((books[0].price / 2).toFixed(2));
      res.body.price.should.be.equal(halfPrice);
      return done();
    });
  });
});

// ---
// generated by coffee-script 1.9.2
